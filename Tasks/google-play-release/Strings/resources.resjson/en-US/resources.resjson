{
  "loc.friendlyName": "Google Play - Release",
  "loc.description": "Release an app to the Google Play Store",
  "loc.instanceNameFormat": "Release $(apkFile) to $(track)",
  "loc.group.displayName.advanced": "Advanced Options",
  "loc.input.label.authType": "Authentication Method",
  "loc.input.label.serviceEndpoint": "Service Endpoint",
  "loc.input.help.serviceEndpoint": "Google Play service endpoint that is configured with your account credentials.",
  "loc.input.label.serviceAccountKey": "JSON Key Path",
  "loc.input.help.serviceAccountKey": "The JSON file provided by Google Play that includes the service account's identity you wish to publish your APK under.",
  "loc.input.label.apkFile": "APK Path",
  "loc.input.help.apkFile": "Path to the APK file you want to publish to the specified track. Wildcards can be used. For example, _\\*\\*/\\*.apk_ to match the first APK file, in any directory.",
  "loc.input.label.track": "Track",
  "loc.input.help.track": "Track you want to publish the APK to.",
  "loc.input.label.userFraction": "Rollout Fraction",
  "loc.input.help.userFraction": "The percentage of users to roll the specified APK out to.",
  "loc.input.label.changeLogFile": "Release Notes (File)",
  "loc.input.help.changeLogFile": "Path to the file specifying the release notes (change log) for the APK you are publishing.",
  "loc.input.label.shouldAttachMetadata": "Update Metadata",
  "loc.input.help.shouldAttachMetadata": "Checking this box will make the task attempt to update the metadata on your app release.",
  "loc.input.label.metadataRootPath": "Metadata Root Directory",
  "loc.input.help.metadataRootPath": "The path to the metadata folder with the fastlane metadata structure.",
  "loc.input.label.shouldUploadApks": "Update APK(s)",
  "loc.input.help.shouldUploadApks": "By default, the task will update the specified binary APK file(s) on your app release. Unselecting this option you can update metadata keeping the APKs untouched.",
  "loc.input.label.additionalApks": "Additional APK Path(s)",
  "loc.input.help.additionalApks": "Paths to additional APK files you want to publish to the specified track (e.g. an x86 build). Wildcards can be used. For example, _\\*\\*/\\*.apk_ to match all APK files, in any directory.",
  "loc.input.label.versionCodeFilterType": "Replace version codes",
  "loc.input.help.versionCodeFilterType": "Specify version codes to replace in the selected track with the new APKs: all, the comma separated list, or a regilar expression pattern.",
  "loc.input.label.replaceList": "Version code list",
  "loc.input.help.replaceList": "The comma separated list of APK version codes to be removed from the track with this deployment.",
  "loc.input.label.replaceExpression": "Version code pattern",
  "loc.input.help.replaceExpression": "The regular expression pattern to select a list of APK version codes to be removed from the track with this deployment, e.g. .*12?(3|4)?5 .",
  "loc.messages.InvalidAuthFile": "%s is not a valid auth file",
  "loc.messages.FoundMultiApks": "Found multiple Apks to upload:",
  "loc.messages.GetNewEditAfterAuth": "Authenticated with Google Play and getting new edit ",
  "loc.messages.UploadApk": "Uploading APK file %s...",
  "loc.messages.UpdateTrack": "Updating track information...",
  "loc.messages.AttachingMetadataToRelease": "Attempting to attach metadata to release...",
  "loc.messages.AptPublishSucceed": "APK successfully published!",
  "loc.messages.TrackInfo": "Track: %s",
  "loc.messages.Success": "Successfully publish APKs.",
  "loc.messages.Failure": "Failed to publish APKs.",
  "loc.messages.AddChangelog": "Adding changelog file...",
  "loc.messages.AppendChangelog": "Appending changelog %s",
  "loc.messages.UploadingMetadataForLanguage": "Attempting to upload metadata in %s for language code %s",
  "loc.messages.FoundImageAtPath": "Found image for type %s at %s",
  "loc.messages.ImageTypeNotFound": "Image for %s was not found. Skipping...",
  "loc.messages.StatNotDirectory": "Stat returned that %s was not a directory. Is there a file that shares this name?",
  "loc.messages.ImageDirNotFound": "Image directory for %s was not found. Skipping...",
  "loc.messages.UploadImageFail": "Failed to upload image.",
  "loc.messages.RequestDetails": "Request Details: %s",
  "loc.messages.CannotGetPackageName": "The specified APK file %s is not valid. Please check the path and try to queue another build.",
  "loc.messages.CannotCreateTransaction": "Failed to create a new edit transaction for the package %s. See log for details.",
  "loc.messages.CannotUploadApk": "Failed to upload the APK %s. See log for details.",
  "loc.messages.CannotDownloadTrack": "Failed to download track %s information. See log for details.",
  "loc.messages.CannotUpdateTrack": "Failed to download track %s information. See log for details.",
  "loc.messages.CanotReadChangeLog": "Changelog reading failed for %s. Check logs for details.",
  "loc.messages.CannotUploadChangelog": "Failed to upload the %s changelog %s version %s. See log for details.",
  "loc.messages.CannotCreateListing": "Failed to create the loacalized %s store listing.",
  "loc.messages.IncorrectVersionCodeFilter": "Version code list specified contains incorrect codes: %s"
}